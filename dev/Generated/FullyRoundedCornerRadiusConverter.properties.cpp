// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "FullyRoundedCornerRadiusConverter.h"

namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    CppWinRTActivatableClassWithDPFactory(FullyRoundedCornerRadiusConverter)
}

#include "FullyRoundedCornerRadiusConverter.g.cpp"

GlobalDependencyProperty FullyRoundedCornerRadiusConverterProperties::s_OffsetProperty{ nullptr };

FullyRoundedCornerRadiusConverterProperties::FullyRoundedCornerRadiusConverterProperties()
{
    EnsureProperties();
}

void FullyRoundedCornerRadiusConverterProperties::EnsureProperties()
{
    if (!s_OffsetProperty)
    {
        s_OffsetProperty =
            InitializeDependencyProperty(
                L"Offset",
                winrt::name_of<double>(),
                winrt::name_of<winrt::FullyRoundedCornerRadiusConverter>(),
                false /* isAttached */,
                ValueHelper<double>::BoxValueIfNecessary(0.0),
                nullptr);
    }
}

void FullyRoundedCornerRadiusConverterProperties::ClearProperties()
{
    s_OffsetProperty = nullptr;
}

void FullyRoundedCornerRadiusConverterProperties::Offset(double value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<FullyRoundedCornerRadiusConverter*>(this)->SetValue(s_OffsetProperty, ValueHelper<double>::BoxValueIfNecessary(value));
    }
}

double FullyRoundedCornerRadiusConverterProperties::Offset()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<FullyRoundedCornerRadiusConverter*>(this)->GetValue(s_OffsetProperty));
}
